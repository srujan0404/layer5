{"version":3,"file":"component---src-pages-projects-sistent-about-js-aa63b8cea367426990e7.js","mappings":"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","sources":["webpack://Layer5/./src/components/handbook-navigation/intra-page.js","webpack://Layer5/./src/sections/Projects/Sistent/about.js","webpack://Layer5/./src/pages/projects/sistent/about.js","webpack://Layer5/./src/sections/Projects/Sistent/components/button/code-block.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Link } from \"gatsby\";\nimport styled from \"styled-components\";\n\nconst JoinCommunityWrapper = styled.div`\n  @media screen and (min-width: 751px) and (max-width: 1279px) {\n    display: none;\n  }\n  .intra-page {\n    position: sticky;\n    top: 10rem;\n    right: 0rem;\n    margin-right: 1rem;\n    padding-bottom: 5rem;\n    padding-right: 2rem;\n    align-items: left;\n    justify-content: space-around;\n    display: flex;\n    flex-direction: column;\n    overflow: hidden;\n\n    .list {\n      color: #000000;\n    }\n    .active {\n      font-weight: 5000;\n      color: #000000;\n    }\n\n    ul {\n      list-style: none;\n      top: 3rem;\n      li {\n        padding-bottom: 0.5rem;\n        padding-top: 0.5rem;\n      }\n    }\n    @media only screen and (min-width: 1280px) and (max-width: 1350px) {\n      padding-right: 0rem;\n      margin-right: 0rem;\n    }\n    @media only screen and (max-width: 950px) {\n      width: 0;\n      opacity: 0;\n      height: 0;\n      transition: none;\n      visibility: hidden;\n    }\n  }\n\n  .learn {\n    width: 10rem;\n  }\n`;\n\nfunction IntraPage({ contents }) {\n  const [intapath, setIntapath] = useState(null);\n  useEffect(() => {\n    const path = window.location.pathname;\n    setIntapath(path);\n  }, []);\n\n  return (\n    <JoinCommunityWrapper>\n      <div className=\"intra-page\">\n        <ul>\n          {contents.map((x) => (\n            <li key={x.id} className=\"list\">\n              <Link\n                to={`${intapath}${x.link}`}\n                key={x.id}\n                activeClassName=\"active\"\n              >\n                {x.text}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      </div>\n    </JoinCommunityWrapper>\n  );\n}\n\nexport default IntraPage;\n","import React from \"react\";\nimport { Container } from \"../../../reusecore/Layout\";\nimport SistentWrapper from \"./sistent.style\";\nimport TOC from \"../../../components/SistentNavigation\";\nimport IntraPage from \"../../../components/handbook-navigation/intra-page\";\nimport SistentPagination from \"../../../components/SistentNavigation/pagination\";\n\nimport { useStyledDarkMode } from \"../../../theme/app/useStyledDarkMode\";\nimport { CodeBlock } from \"./components/button/code-block\";\nimport { SistentThemeProvider } from \"@layer5/sistent\";\nimport { Button } from \"@layer5/sistent\";\n\nconst contents = [{ id: 0, link: \"#About Sistent\", text: \"About Sistent\" }];\n\nconst codes = [\n  \"npm i @layer5/sistent\",\n  `  import { SistentThemeProvider } from \"@layer5/sistent\";\n  import { Button } from \"@layer5/sistent\";\n     \n  <SistentThemeProvider>\n    <div>\n      <Button variant=\"contained\">Filled</Button>\n      <Button variant=\"outlined\">Outlined</Button>\n      <Button variant=\"text\">Text</Button>\n    </div>\n  </SistentThemeProvider>`,\n];\n\nconst SistentAbout = () => {\n  const { isDark } = useStyledDarkMode();\n\n  return (\n    <SistentWrapper>\n      <div className=\"page-header-section\">\n        <h1>About Sistent</h1>\n      </div>\n      <TOC />\n      <div className=\"page-section\">\n        <Container>\n          <div className=\"content\">\n            <a id=\"About Sistent\">\n              <h2>About Sistent</h2>\n            </a>\n            <p>\n            Sistent is the Layer5 Design System - an open source design system that offers building blocks to create consistent, accessible, and user-friendly interfaces. It's aimed at developers who want to design applications aligned with the same brand and ensure a uniform user experience across different products.\n            </p>\n            <p>\n            Sistent leverages Material UI libraries and provides a custom theme on top of it for a consistent look and feel. It includes components, icons, and design tokens that developers can readily integrate into their applications. By using Sistent, developers can save time and effort while maintaining a high-quality user experience throughout Layer5 products.\n            </p>\n            <p>\n              <b>Sistent provides a consistent user experience across Layer5 projects and any frontend software projects that choose to use Sistent, too.</b>\n            </p>\n            <p>\n              'Sistent' is a play on words to ensure that we have a <i>consistent</i> theme, components, design tokens, etc across all of the apps that will be using this library. Sistent is a design system that uses the <b>MUI v5 components</b> and a <b>custom theme provider </b> instead of using the default theme from MUI v5.\n            </p>\n\n            <p>\n              Sistent is built with Typescript and Reactjs and contains components and a large collection of icons that can be reused across projects. If youâ€™re interested in joining the project (please do!), let us know, and we will  help you get started on contributing.\n            </p>\n            <a id=\"Installation\">\n              <h2>Installation and Quickstart</h2>\n            </a>\n            <p>\n              To install the Sistent NPM package, run:\n            </p>\n            <div className=\"showcase\">\n              <CodeBlock name=\"installation\" code={codes[0]} />\n            </div>\n            <p>\n              After installation, you can import Sistent theme and any Sistent\n              component from \"@layer5/sistent\". The component needs to be\n              included inside \"SistentThemeProvider\".\n            </p>\n            <p>Taking button as an example:</p>\n            <div className=\"showcase\">\n              <div className=\"items\">\n                <SistentThemeProvider initialMode={isDark ? \"dark\" : \"light\"}>\n                  <div>\n                    <Button variant=\"contained\">Filled</Button>\n                    <Button variant=\"outlined\">Outlined</Button>\n                    <Button variant=\"text\">Text</Button>\n                  </div>\n                </SistentThemeProvider>\n              </div>\n              <CodeBlock name=\"checkbox\" code={codes[1]} />\n            </div>\n          </div>\n          <SistentPagination />\n        </Container>\n        <IntraPage contents={contents} />\n      </div>\n    </SistentWrapper>\n  );\n};\n\nexport default SistentAbout;\n","import React from \"react\";\nimport SistentAbout from \"../../../sections/Projects/Sistent/about\";\n\nconst SistentAboutPage = () => {\n  return <SistentAbout />;\n};\n\nexport default SistentAboutPage;\n","import React, { useState } from \"react\";\n\nexport const CodeBlock = ({ name, code }) => {\n  const [showCode, setShowCode] = useState(false);\n\n  const onChange = () => {\n    setShowCode((prev) => !prev);\n  };\n\n  return (\n    <div className=\"show-code\">\n      <input type=\"checkbox\" name={name} id={name} onChange={onChange} />\n      <label htmlFor={name} className=\"label\">\n        Show Code\n      </label>\n      {showCode && (\n        <pre className=\"code\">\n          <code lang=\"javascript\">{code}</code>\n        </pre>\n      )}\n    </div>\n  );\n};\n"],"names":["JoinCommunityWrapper","styled","div","withConfig","displayName","componentId","_ref","contents","intapath","setIntapath","useState","useEffect","path","window","location","pathname","React","className","map","x","key","id","Link","to","link","activeClassName","text","codes","SistentAbout","isDark","useStyledDarkMode","SistentWrapper","TOC","Container","CodeBlock","name","code","SistentThemeProvider","initialMode","Button","variant","SistentPagination","IntraPage","SistentAboutPage","showCode","setShowCode","type","onChange","prev","htmlFor","lang"],"sourceRoot":""}