{"version":3,"file":"component---src-pages-projects-sistent-components-text-input-guidance-js-c40d2dc96a846ed52b41.js","mappings":"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","sources":["webpack://Layer5/./src/sections/Projects/Sistent/components/text-input/guidance.js","webpack://Layer5/./src/pages/projects/sistent/components/text-input/guidance.js","webpack://Layer5/./src/components/SistentNavigation/intra-page.js","webpack://Layer5/./src/sections/Projects/Sistent/sistent-layout.js"],"sourcesContent":["import React from \"react\";\nimport { navigate } from \"gatsby\";\nimport { useLocation } from \"@reach/router\";\n\nimport { Row } from \"../../../../../reusecore/Layout\";\nimport { SistentThemeProvider, Input } from \"@layer5/sistent\";\nimport { SistentLayout } from \"../../sistent-layout\";\n\nimport TabButton from \"../../../../../reusecore/Button\";\nimport { useStyledDarkMode } from \"../../../../../theme/app/useStyledDarkMode\";\nexport const TextInputGuidance = () => {\n  const location = useLocation();\n  const { isDark } = useStyledDarkMode();\n\n  return (\n    <SistentLayout title=\"Text Input\">\n      <div className=\"content\">\n        <a id=\"Identity\">\n          <h2>Text Input</h2>\n        </a>\n        <p>\n          Text inputs are important elements that help users interact with an\n          experience by providing text commands that will in turn return\n          expected results. These commands can range from providing a free range\n          of personal information to entering a limited number of characters for\n          a use case.\n        </p>\n        <div className=\"filterBtns\">\n          <TabButton\n            className={\n              location.pathname === \"/projects/sistent/components/text-input\"\n                ? \"active\"\n                : \"\"\n            }\n            onClick={() => navigate(\"/projects/sistent/components/text-input\")}\n            title=\"Overview\"\n          />\n          <TabButton\n            className={\n              location.pathname ===\n              \"/projects/sistent/components/text-input/guidance\"\n                ? \"active\"\n                : \"\"\n            }\n            onClick={() =>\n              navigate(\"/projects/sistent/components/text-input/guidance\")\n            }\n            title=\"Guidance\"\n          />\n          <TabButton\n            className={\n              location.pathname ===\n              \"/projects/sistent/components/text-input/code\"\n                ? \"active\"\n                : \"\"\n            }\n            onClick={() =>\n              navigate(\"/projects/sistent/components/text-input/code\")\n            }\n            title=\"Code\"\n          />\n        </div>\n        <div className=\"main-content\">\n          <p>\n            Although we have only one type of text input to be used, there are\n            different roles that they can function in that ensure that these\n            inputs prove sufficient for multiple use cases.\n          </p>\n          <a id=\"Function\">\n            <h2>Function</h2>\n          </a>\n          <p></p>\n          <h3>Default</h3>\n          <p>\n            Default text inputs are used for most of the input needs across an\n            interface. From filling up forms to entering text content in\n            provided form fields to complete an action or a task. this text\n            input is mostly utilized. Icons are not seldom required in this text\n            input, however, they can included when extremely necessary.\n          </p>\n          <Row Hcenter>\n            <SistentThemeProvider initialMode={isDark ? \"dark\" : \"light\"}>\n              <Input placeholder=\"Placeholder goes here\" />\n            </SistentThemeProvider>\n          </Row>\n          <h3>Multiline</h3>\n          <p>\n            Multiline text input functions for input that requires more than one\n            line of text. This text input adjusts vertically based on the amount\n            of lines of text entered into the text field.\n          </p>\n          <Row Hcenter>\n            <SistentThemeProvider initialMode={isDark ? \"dark\" : \"light\"}>\n              <Input placeholder=\"Placeholder goes here\" multiline />\n            </SistentThemeProvider>\n          </Row>\n          <a id=\"Labelling\">\n            <h2>Labelling</h2>\n          </a>\n          <p>\n            A couple of elements come together to support the input field\n            depending on the context in is being used. These elements either\n            provide added information or provide much needed support to ensure\n            users are able to complete intended tasks.\n          </p>\n          <h3>Label</h3>\n          <p>\n            The label is an optional feature that can accompany the text input.\n            It an be used to point out what is required in the input field.\n          </p>\n          <h3>Required</h3>\n          <p>\n            This type of label that is usually applied in forms to inform users\n            of a compulsary information that is to be provided in order to\n            complete the form. It is represented by an asterisk mark (*) that\n            appears after the label text.\n          </p>\n          <h3>Helper text</h3>\n          <p>\n            Helper text appears at the bottom of the input field and it is\n            primarily to serve as an alert for the user to inform them based on\n            the input they have entered but only where necessary.\n          </p>\n        </div>\n      </div>\n    </SistentLayout>\n  );\n};\n","import React from \"react\";\nimport { TextInputGuidance } from \"../../../../../sections/Projects/Sistent/components/text-input/guidance\";\n\nconst TextInputGuidancePage = () => {\n  return <TextInputGuidance />;\n};\n\nexport default TextInputGuidancePage;\n","import React, { useEffect, useState } from \"react\";\nimport { Link } from \"gatsby\";\nimport styled from \"styled-components\";\n\nconst JoinCommunityWrapper = styled.div`\n  width: 18rem;\n\n  @media screen and (max-width: 750px) {\n    display: none;\n  }\n\n  @media screen and (min-width: 751px) and (max-width: 1279px) {\n    display: none;\n  }\n  .intra-page {\n    position: sticky;\n    top: 10rem;\n    right: 0rem;\n    margin-right: 1rem;\n    padding-bottom: 5rem;\n    padding-right: 2rem;\n    align-items: left;\n    justify-content: space-around;\n    display: flex;\n    flex-direction: column;\n    overflow: hidden;\n\n    .list {\n      color: #000000;\n    }\n    .active {\n      font-weight: 5000;\n      color: #000000;\n    }\n\n    ul {\n      list-style: none;\n      top: 3rem;\n      li {\n        padding-bottom: 0.5rem;\n        padding-top: 0.5rem;\n      }\n    }\n    @media only screen and (min-width: 1280px) and (max-width: 1350px) {\n      padding-right: 0rem;\n      margin-right: 0rem;\n    }\n    @media only screen and (max-width: 950px) {\n      width: 0;\n      opacity: 0;\n      height: 0;\n      transition: none;\n      visibility: hidden;\n    }\n  }\n\n  .learn {\n    width: 10rem;\n  }\n`;\n\nfunction IntraPage() {\n  const [contents, setContents] = useState([]);\n\n  useEffect(() => {\n    const anchors = document.querySelectorAll(\".main-content > a\");\n    console.log(anchors);\n    if (anchors) {\n      setContents(\n        Array.from(anchors).map((a) => ({\n          id: a.id,\n          link: `#${a.id}`,\n          text: a.id,\n        }))\n      );\n    }\n  }, []);\n\n  const [intapath, setIntapath] = useState(null);\n  useEffect(() => {\n    const path = window.location.pathname;\n    setIntapath(path);\n  }, []);\n\n  return (\n    <JoinCommunityWrapper>\n      <div className=\"intra-page\">\n        <ul>\n          {contents.map((x) => (\n            <li key={x.id} className=\"list\">\n              <Link\n                to={`${intapath}${x.link}`}\n                key={x.id}\n                activeClassName=\"active\"\n              >\n                {x.text}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      </div>\n    </JoinCommunityWrapper>\n  );\n}\n\nexport default IntraPage;\n","import React from \"react\";\nimport SistentWrapper from \"./sistent.style\";\nimport TOC from \"../../../components/SistentNavigation\";\nimport { Container } from \"../../../reusecore/Layout\";\nimport SistentPagination from \"../../../components/SistentNavigation/pagination\";\nimport IntraPage from \"../../../components/SistentNavigation/intra-page\";\n\nexport const SistentLayout = ({ title, children }) => {\n  return (\n    <SistentWrapper>\n      <div className=\"page-header-section\">\n        <h1>{title}</h1>\n      </div>\n      <TOC />\n      <div className=\"page-section\">\n        <Container>\n          {children} <SistentPagination />\n        </Container>\n        <IntraPage />\n      </div>\n    </SistentWrapper>\n  );\n};\n"],"names":["TextInputGuidance","location","useLocation","isDark","useStyledDarkMode","React","SistentLayout","title","className","id","TabButton","pathname","onClick","navigate","Row","Hcenter","SistentThemeProvider","initialMode","Input","placeholder","multiline","TextInputGuidancePage","JoinCommunityWrapper","styled","div","withConfig","displayName","componentId","contents","setContents","useState","useEffect","anchors","document","querySelectorAll","console","log","Array","from","map","a","link","text","intapath","setIntapath","path","window","x","key","Link","to","activeClassName","_ref","children","SistentWrapper","TOC","Container","SistentPagination","IntraPage"],"sourceRoot":""}