{"version":3,"file":"reactPlayerTwitch-86e5fce6b7e02e47df10.js","mappings":"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","sources":["webpack://Layer5/./node_modules/react-player/lib/players/Twitch.js"],"sourcesContent":["var __create = Object.create;\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __getProtoOf = Object.getPrototypeOf;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\nvar __export = (target, all) => {\n  for (var name in all) __defProp(target, name, {\n    get: all[name],\n    enumerable: true\n  });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from)) if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {\n      get: () => from[key],\n      enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable\n    });\n  }\n  return to;\n};\nvar __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(\n// If the importer is in node compatibility mode or this is not an ESM\n// file that has been converted to a CommonJS file using a Babel-\n// compatible transform (i.e. \"__esModule\" has not been set), then set\n// \"default\" to the CommonJS \"module.exports\" for node compatibility.\nisNodeMode || !mod || !mod.__esModule ? __defProp(target, \"default\", {\n  value: mod,\n  enumerable: true\n}) : target, mod));\nvar __toCommonJS = mod => __copyProps(__defProp({}, \"__esModule\", {\n  value: true\n}), mod);\nvar __publicField = (obj, key, value) => {\n  __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n  return value;\n};\nvar Twitch_exports = {};\n__export(Twitch_exports, {\n  default: () => Twitch\n});\nmodule.exports = __toCommonJS(Twitch_exports);\nvar import_react = __toESM(require(\"react\"));\nvar import_utils = require(\"../utils\");\nvar import_patterns = require(\"../patterns\");\nconst SDK_URL = \"https://player.twitch.tv/js/embed/v1.js\";\nconst SDK_GLOBAL = \"Twitch\";\nconst PLAYER_ID_PREFIX = \"twitch-player-\";\nclass Twitch extends import_react.Component {\n  constructor() {\n    super(...arguments);\n    __publicField(this, \"callPlayer\", import_utils.callPlayer);\n    __publicField(this, \"playerID\", this.props.config.playerId || \"\".concat(PLAYER_ID_PREFIX).concat((0, import_utils.randomString)()));\n    __publicField(this, \"mute\", () => {\n      this.callPlayer(\"setMuted\", true);\n    });\n    __publicField(this, \"unmute\", () => {\n      this.callPlayer(\"setMuted\", false);\n    });\n  }\n  componentDidMount() {\n    this.props.onMount && this.props.onMount(this);\n  }\n  load(url, isReady) {\n    const {\n      playsinline,\n      onError,\n      config,\n      controls\n    } = this.props;\n    const isChannel = import_patterns.MATCH_URL_TWITCH_CHANNEL.test(url);\n    const id = isChannel ? url.match(import_patterns.MATCH_URL_TWITCH_CHANNEL)[1] : url.match(import_patterns.MATCH_URL_TWITCH_VIDEO)[1];\n    if (isReady) {\n      if (isChannel) {\n        this.player.setChannel(id);\n      } else {\n        this.player.setVideo(\"v\" + id);\n      }\n      return;\n    }\n    (0, import_utils.getSDK)(SDK_URL, SDK_GLOBAL).then(Twitch2 => {\n      this.player = new Twitch2.Player(this.playerID, {\n        video: isChannel ? \"\" : id,\n        channel: isChannel ? id : \"\",\n        height: \"100%\",\n        width: \"100%\",\n        playsinline,\n        autoplay: this.props.playing,\n        muted: this.props.muted,\n        // https://github.com/CookPete/react-player/issues/733#issuecomment-549085859\n        controls: isChannel ? true : controls,\n        time: (0, import_utils.parseStartTime)(url),\n        ...config.options\n      });\n      const {\n        READY,\n        PLAYING,\n        PAUSE,\n        ENDED,\n        ONLINE,\n        OFFLINE,\n        SEEK\n      } = Twitch2.Player;\n      this.player.addEventListener(READY, this.props.onReady);\n      this.player.addEventListener(PLAYING, this.props.onPlay);\n      this.player.addEventListener(PAUSE, this.props.onPause);\n      this.player.addEventListener(ENDED, this.props.onEnded);\n      this.player.addEventListener(SEEK, this.props.onSeek);\n      this.player.addEventListener(ONLINE, this.props.onLoaded);\n      this.player.addEventListener(OFFLINE, this.props.onLoaded);\n    }, onError);\n  }\n  play() {\n    this.callPlayer(\"play\");\n  }\n  pause() {\n    this.callPlayer(\"pause\");\n  }\n  stop() {\n    this.callPlayer(\"pause\");\n  }\n  seekTo(seconds) {\n    let keepPlaying = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n    this.callPlayer(\"seek\", seconds);\n    if (!keepPlaying) {\n      this.pause();\n    }\n  }\n  setVolume(fraction) {\n    this.callPlayer(\"setVolume\", fraction);\n  }\n  getDuration() {\n    return this.callPlayer(\"getDuration\");\n  }\n  getCurrentTime() {\n    return this.callPlayer(\"getCurrentTime\");\n  }\n  getSecondsLoaded() {\n    return null;\n  }\n  render() {\n    const style = {\n      width: \"100%\",\n      height: \"100%\"\n    };\n    return /* @__PURE__ */import_react.default.createElement(\"div\", {\n      style,\n      id: this.playerID\n    });\n  }\n}\n__publicField(Twitch, \"displayName\", \"Twitch\");\n__publicField(Twitch, \"canPlay\", import_patterns.canPlay.twitch);\n__publicField(Twitch, \"loopOnEnded\", true);"],"names":["mod","__create","Object","create","__defProp","defineProperty","__getOwnPropDesc","getOwnPropertyDescriptor","__getOwnPropNames","getOwnPropertyNames","__getProtoOf","getPrototypeOf","__hasOwnProp","prototype","hasOwnProperty","__copyProps","to","from","except","desc","key","call","get","enumerable","__publicField","obj","value","configurable","writable","__defNormalProp","Twitch_exports","target","all","name","__export","default","Twitch","module","exports","import_react","isNodeMode","__esModule","__toESM","import_utils","import_patterns","Component","constructor","super","arguments","this","callPlayer","props","config","playerId","concat","randomString","componentDidMount","onMount","load","url","isReady","playsinline","onError","controls","isChannel","MATCH_URL_TWITCH_CHANNEL","test","id","match","MATCH_URL_TWITCH_VIDEO","player","setChannel","setVideo","getSDK","then","Twitch2","Player","playerID","video","channel","height","width","autoplay","playing","muted","time","parseStartTime","options","READY","PLAYING","PAUSE","ENDED","ONLINE","OFFLINE","SEEK","addEventListener","onReady","onPlay","onPause","onEnded","onSeek","onLoaded","play","pause","stop","seekTo","seconds","keepPlaying","length","undefined","setVolume","fraction","getDuration","getCurrentTime","getSecondsLoaded","render","createElement","style","canPlay","twitch"],"sourceRoot":""}